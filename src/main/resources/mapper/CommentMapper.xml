<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tianll.blog.model.mapper.CommentMapper">

    <resultMap id="BaseResultMap" type="com.tianll.blog.model.domain.Comment">
            <id property="id" column="id" jdbcType="INTEGER"/>
            <result property="articleId" column="article_id" jdbcType="INTEGER"/>
            <result property="created" column="created" jdbcType="DATE"/>
            <result property="ip" column="ip" jdbcType="VARCHAR"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="status" column="status" jdbcType="VARCHAR"/>
            <result property="author" column="author" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,article_id,created,
        ip,content,status,
        author
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_comment
        where  id = #{id,jdbcType=INTEGER} 
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from t_comment
        where  id = #{id,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.tianll.blog.model.domain.Comment" useGeneratedKeys="true">
        insert into t_comment
        ( id,article_id,created
        ,ip,content,status
        ,author)
        values (#{id,jdbcType=INTEGER},#{articleId,jdbcType=INTEGER},#{created,jdbcType=DATE}
        ,#{ip,jdbcType=VARCHAR},#{content,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR}
        ,#{author,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.tianll.blog.model.domain.Comment" useGeneratedKeys="true">
        insert into t_comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="articleId != null">article_id,</if>
                <if test="created != null">created,</if>
                <if test="ip != null">ip,</if>
                <if test="content != null">content,</if>
                <if test="status != null">status,</if>
                <if test="author != null">author,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=INTEGER},</if>
                <if test="articleId != null">#{articleId,jdbcType=INTEGER},</if>
                <if test="created != null">#{created,jdbcType=DATE},</if>
                <if test="ip != null">#{ip,jdbcType=VARCHAR},</if>
                <if test="content != null">#{content,jdbcType=VARCHAR},</if>
                <if test="status != null">#{status,jdbcType=VARCHAR},</if>
                <if test="author != null">#{author,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tianll.blog.model.domain.Comment">
        update t_comment
        <set>
                <if test="articleId != null">
                    article_id = #{articleId,jdbcType=INTEGER},
                </if>
                <if test="created != null">
                    created = #{created,jdbcType=DATE},
                </if>
                <if test="ip != null">
                    ip = #{ip,jdbcType=VARCHAR},
                </if>
                <if test="content != null">
                    content = #{content,jdbcType=VARCHAR},
                </if>
                <if test="status != null">
                    status = #{status,jdbcType=VARCHAR},
                </if>
                <if test="author != null">
                    author = #{author,jdbcType=VARCHAR},
                </if>
        </set>
        where   id = #{id,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tianll.blog.model.domain.Comment">
        update t_comment
        set 
            article_id =  #{articleId,jdbcType=INTEGER},
            created =  #{created,jdbcType=DATE},
            ip =  #{ip,jdbcType=VARCHAR},
            content =  #{content,jdbcType=VARCHAR},
            status =  #{status,jdbcType=VARCHAR},
            author =  #{author,jdbcType=VARCHAR}
        where   id = #{id,jdbcType=INTEGER} 
    </update>
</mapper>
